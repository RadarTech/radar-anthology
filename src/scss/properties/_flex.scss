// --- flex --- //
$flex-adjectives: ();

@for $i from 0 through 5 {
  $flex-adjectives: map-merge($flex-adjectives, ($i: $i));
}

@include A(define, 'flex', flex, $flex-adjectives);
@include A(define, 'flex-grow', flex-grow, $flex-adjectives);
@include A(define, 'flex-shrink', flex-shrink, $flex-adjectives);

// --- flex-direction --- //
$flex-direction-adjectives: (
  'row': row,
  'column': column,
);
@include A(define, 'flex-direction', flex-direction, $flex-direction-adjectives);

// --- flex-basis --- //
$flex-basis-adjectives: (
  'content': content,
  'auto': auto,
);

@for $i from 0 through 100 {
  @if $i % 5 == 0 {
    $flex-basis-adjectives: map-merge($flex-basis-adjectives, ($i: $i * 1%));
  }
}
@include A(define, 'flex-basis', flex-basis, $flex-basis-adjectives);

// --- flex-wrap --- //
$flex-wrap-adjectives: (
  'wrap': wrap,
  'nowrap': nowrap,
  'wrap-reverse': wrap-reverse
);
@include A(define, 'flex-wrap', flex-wrap, $flex-wrap-adjectives);
